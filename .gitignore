# Created by https://www.toptal.com/developers/gitignore/api/python
# Edit at https://www.toptal.com/developers/gitignore?templates=python

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so
apps/

c++/

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

*~
.\#*
\#*#

*.py[co]
__pycache__/
/*.egg
/*.egg-info/
*.egg-info/
/*.egg-link
/.eggs/
/.pytest_cache/
/pip-wheel-metadata/
/.coverage
/.tox

# /
/AES.pyd
/AES.so
/*.bak
/build/
/dist/
/*.patch
/MANIFEST

# Temporary vim files
*.swp

# Temporary rope files
.ropeproject

# PyCharm settings
.idea

# Spyder settings
.spyproject

# /tests/
/tests/build*
/tests/dist*
/tests/logdict*.log
/tests/test*.exe
/tests/warn*.txt
/tests/python_exe.build
/tests/report.xml

/tests/**/build/
/tests/**/dist/

# Ignore generated spec-files
# NB: You can still add .spec-files to be tracked using `git add`
/tests/old_suite/**/*.spec

# /tests/functional/data
/tests/functional/data/sphinx/_build

# /tests/old_suite/basic/
/tests/old_suite/basic/python_exe.build

# /tests/old_suite/basic/ctypes/
/tests/old_suite/basic/ctypes/testctypes.dylib
/tests/old_suite/basic/ctypes/testctypes.so
/tests/old_suite/basic/ctypes/testctypes-win.dll
/tests/old_suite/basic/ctypes/testctypes-win.exp
/tests/old_suite/basic/ctypes/testctypes-win.obj
/tests/old_suite/basic/ctypes/testctypes-win.lib

tests/old_suite/basic/test_pyz_as_external_file.exe.pkg

# /tests/old_suite/libraries/
/tests/old_suite/libraries/tinysample.png

/old/e2etests/common/hanoi[1-9]

# /doc/
/doc/source/_definitions.txt
/doc/_pyi*-options.tmp
/doc/man/_pyi*.tmp
/doc/_build

# Bootloader source
/bootloader/.lock-waf*
/bootloader/.lock-wscript
/bootloader/build/
/bootloader/_sdks
/bootloader/.vagrant/
/bootloader/waf-*/
/bootloader/waf3-*/
/bootloader/.waf-*/
/bootloader/.waf3-*/

# Exclude all but the standard bootloaders
PyInstaller/bootloader/*
!PyInstaller/bootloader/Darwin-64bit
!PyInstaller/bootloader/Linux-32bit-intel/
!PyInstaller/bootloader/Linux-64bit-intel/
!PyInstaller/bootloader/Windows-32bit-intel/
!PyInstaller/bootloader/Windows-64bit-intel/
!PyInstaller/bootloader/images/

# Mac OS X
.DS_store

# Windows debug symbols
*.pdb

# py.test cache folder
.cache
*.prof

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# VSCode projects
*.code-workspace
*.vscode

# Coverage
.coverage
htmlcov

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml


# End of https://www.toptal.com/developers/gitignore/api/python
